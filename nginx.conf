server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Servir archivos estáticos del frontend
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers para prevenir cache en producción
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Proxy para las peticiones a la API
    # Las peticiones a /api/* se redirigen al backend
    location /api/ {
        # Remover /api del path antes de enviar al backend
        rewrite ^/api/(.*)$ /$1 break;
        
        # Proxy al backend en Docker Compose
        # NOTA: Ajustar según la configuración de tu docker-compose.yml
        # - Docker Compose: http://backend:5050 (nombre del servicio)
        # - Kubernetes: http://backend-service:5050
        # - VM/Host: http://host.docker.internal:5050
        proxy_pass http://backend:5050;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Headers para preservar información del cliente
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts más largos para operaciones complejas
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Deshabilitar buffering para respuestas en tiempo real
        proxy_buffering off;
    }

    # Configuración de logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
