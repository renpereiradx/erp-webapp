/**
 * Debug espec√≠fico para el problema de categor√≠as vs productos
 * Ejecutar este c√≥digo en la consola del navegador para debug
 */

const debugAuthTokens = () => {
  console.log('üîç DEBUG AUTH TOKENS - Productos vs Categor√≠as:');
  console.log('');
  
  // Verificar token actual
  const token = localStorage.getItem('authToken');
  console.log('ÔøΩ Token actual:');
  console.log('  exists:', !!token);
  console.log('  length:', token ? token.length : 0);
  console.log('  preview:', token ? `${token.substring(0, 30)}...` : 'N/A');
  console.log('');
  
  // Simular headers para productos vs categor√≠as
  const headers = token ? { 'Authorization': token } : {};
  console.log('üìã Headers que se enviar√≠an:');
  console.log('  Authorization:', headers.Authorization || 'NO TOKEN');
  console.log('');
  
  // URLs que se est√°n llamando
  console.log('üöÄ APIs que deber√≠an funcionar:');
  console.log('  Productos: /products/products/1/10');
  console.log('  Categor√≠as: /categories');
  console.log('');
  
  // Verificar si hay inconsistencias
  if (token) {
    console.log('‚úÖ Token disponible - ambas APIs deber√≠an funcionar');
    console.log('üîß Si categor√≠as falla pero productos funciona:');
    console.log('   - Revisar timing de llamadas');
    console.log('   - Verificar que el token no expire entre llamadas');
    console.log('   - Comprobar que ambas usen el mismo formato de header');
  } else {
    console.log('‚ùå Token no disponible - ambas APIs fallar√≠an');
    console.log('üîß Soluci√≥n: Iniciar sesi√≥n primero');
  }
  
  return { hasToken: !!token, headers };
};

// Auto ejecutar
const result = debugAuthTokens();

// Exportar para uso manual
window.debugAuthTokens = debugAuthTokens;
window.authResult = result;

console.log('üîß Debug auth tokens cargado. Resultado:', result);
